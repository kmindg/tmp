$sources{TARGETNAME} = "NewNeitPackage";
$sources{TARGETTYPE} = "PAL_DRIVER";
$sources{TARGETMODES} = [
    "kernel",
];

$sources{TARGETLIBS} = [
    "fbe_ddk.lib",
    "EmcUTIL.lib",
    "ktrace.lib",
    "fbe_ktrace.lib",
    "fbe_trace.lib",
    "fbe_sector_trace.lib",
    "fbe_base_service.lib",
    "fbe_transport.lib",
    "fbe_topology.lib",
    "fbe_event.lib",
    "fbe_scheduler.lib",
    "fbe_lib_lifecycle.lib",
    "fbe_metadata.lib",
    "fbe_crc_lib.lib",
    "fbe_classes.lib",
    "fbe_service_manager.lib",
    "fbe_api_common_kernel.lib",
    "fbe_new_neit_package.lib",
    "fbe_lib_kernel.lib",
    "fbe_logical_error_injection.lib",
    "fbe_rdgen.lib",
    "fbe_rdgen_kernel.lib",
    "fbe_file_kernel.lib",
    "XorLib.lib",
    "fbe_xor_lib.lib",	
    "fbe_protocol_error_injection.lib",
    "fbe_packet_serialize_kernel.lib",
    "fbe_event_log_utils.lib",
    "fbe_event_log_kernel.lib",
    "fbe_event_log.lib",
    "fbe_raid_library.lib",
    "XorLib.lib",
    "fbe_xor_lib.lib",
    "fbe_driver_notification.lib",
    "fbe_cmi_kernel.lib",
    "fbe_api_common.lib",
    "fbe_api_sep_interface.lib",
    "fbe_drive_configuration.lib",
    "fbe_lib_enclosure_data_access.lib",
    "fbe_memory.lib",
    "fbe_memory_kernel.lib",
    "fbe_private_space_layout.lib",
    "fbe_sep_shim.lib",
    "fbe_transport_trace.lib",
    "generic_utils_lib_stdcall.lib",
    "fbe_raw_mirror.lib",
    "fbe_api_object_map_interface.lib",
    "fbe_dest.lib",
    "fbe_dest_service.lib",
    "fbe_registry_kernel.lib",
    "fbe_database_kernel.lib",
    "fbe_peer_boot_utils.lib",

];
if(! $sources{FBE_USER_MODE}) {
push(@{$sources{TARGETLIBS}},
    "spid.lib",
    "interSPLock.lib",
);
}

$sources{SOURCES} = [
    "neit_package_main.c",
    "rdgen_external_queue.cpp",
];
    
$sources{CUSTOM_DEFS} = [
    "/DTRC_GEN_CONTROL",
];
$sources{CUSTOM_LINK_OPTS} = "/MAP ";
