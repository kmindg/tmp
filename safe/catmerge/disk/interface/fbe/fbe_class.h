#ifndef FBE_CLASS_H
#define FBE_CLASS_H

#ifdef __cplusplus
/*
 * all of these functions need standard C linkage.  Otherwise, they can not be referenced from C.
 * Note, thee implementation of these functions is within a cpp file, which allows these functions to
 * access C++ instances, instance methods and class methods
 */
extern "C" {
#endif

#include "fbe/fbe_types.h"

typedef enum fbe_class_id_e {
    FBE_CLASS_ID_INVALID,                       //0x0
    FBE_CLASS_ID_VERTEX,

    FBE_CLASS_ID_BASE_OBJECT,
    FBE_CLASS_ID_BASE_DISCOVERED,
    FBE_CLASS_ID_BASE_DISCOVERING,

    FBE_CLASS_ID_BOARD_FIRST,
    FBE_CLASS_ID_BASE_BOARD,
    FBE_CLASS_ID_HAMMERHEAD_BOARD,
    FBE_CLASS_ID_SLEDGEHAMMER_BOARD,
    FBE_CLASS_ID_JACKHAMMER_BOARD,
    FBE_CLASS_ID_BOOMSLANG_BOARD,
    FBE_CLASS_ID_DELL_BOARD,
    FBE_CLASS_ID_FLEET_BOARD,
    FBE_CLASS_ID_MAGNUM_BOARD,
	FBE_CLASS_ID_ARMADA_BOARD,
    FBE_CLASS_ID_BOARD_LAST,

    FBE_CLASS_ID_PORT_FIRST,
    FBE_CLASS_ID_BASE_PORT,
    FBE_CLASS_ID_FIBRE_PORT,
    FBE_CLASS_ID_SAS_PORT,
    FBE_CLASS_ID_FC_PORT,
    FBE_CLASS_ID_ISCSI_PORT,
    FBE_CLASS_ID_SAS_LSI_PORT,
    FBE_CLASS_ID_SAS_CPD_PORT,
    FBE_CLASS_ID_SAS_PMC_PORT,
    FBE_CLASS_ID_FC_PMC_PORT,
    FBE_CLASS_ID_FIBRE_XPE_PORT,
    FBE_CLASS_ID_FIBRE_DPE_PORT,    
    FBE_CLASS_ID_PORT_LAST,

    FBE_CLASS_ID_LCC_FIRST,
    FBE_CLASS_ID_BASE_LCC,
    FBE_CLASS_ID_FIBRE_LCC,
    FBE_CLASS_ID_FIBRE_KOTO_LCC,
    FBE_CLASS_ID_FIBRE_YUKON_LCC,
    FBE_CLASS_ID_FIBRE_BROADSWORD_2G_LCC,
    FBE_CLASS_ID_FIBRE_BONESWORD_4G_LCC,
    FBE_CLASS_ID_SAS_LCC,
    FBE_CLASS_ID_SAS_BULLET_LCC,
    FBE_CLASS_ID_SAS_VOYAGER_EE_LCC,
    FBE_CLASS_ID_SAS_VIKING_DRVSXP_LCC,
    FBE_CLASS_ID_SAS_CAYENNE_DRVSXP_LCC,
    FBE_CLASS_ID_SAS_NAGA_DRVSXP_LCC,
    FBE_CLASS_ID_LCC_LAST,

    FBE_CLASS_ID_LOGICAL_DRIVE_FIRST,
    FBE_CLASS_ID_BASE_LOGICAL_DRIVE,

    FBE_CLASS_ID_LOGICAL_DRIVE,
    FBE_CLASS_ID_LOGICAL_DRIVE_LAST,
    
    FBE_CLASS_ID_PHYSICAL_DRIVE_FIRST,
    FBE_CLASS_ID_BASE_PHYSICAL_DRIVE,
    FBE_CLASS_ID_FIBRE_PHYSICAL_DRIVE_FIRST,
    FBE_CLASS_ID_FIBRE_PHYSICAL_DRIVE,
    FBE_CLASS_ID_FIBRE_PHYSICAL_DRIVE_LAST,

    FBE_CLASS_ID_SAS_PHYSICAL_DRIVE_FIRST,
    FBE_CLASS_ID_SAS_PHYSICAL_DRIVE,
    FBE_CLASS_ID_SAS_FLASH_DRIVE,
    FBE_CLASS_ID_SATA_PADDLECARD_DRIVE,
    /* All other SAS drives */
    FBE_CLASS_ID_SAS_PHYSICAL_DRIVE_LAST,

    FBE_CLASS_ID_SATA_PHYSICAL_DRIVE_FIRST,
    FBE_CLASS_ID_SATA_PHYSICAL_DRIVE,
    FBE_CLASS_ID_SATA_FLASH_DRIVE,
    /* All other SATA drives */
    FBE_CLASS_ID_SATA_PHYSICAL_DRIVE_LAST,

    FBE_CLASS_ID_PHYSICAL_DRIVE_LAST,

    FBE_CLASS_ID_ENCLOSURE_FIRST,
    FBE_CLASS_ID_BASE_ENCLOSURE,
    FBE_CLASS_ID_SAS_ENCLOSURE_FIRST,
    FBE_CLASS_ID_SAS_ENCLOSURE,
    FBE_CLASS_ID_ESES_ENCLOSURE,
    FBE_CLASS_ID_SAS_BULLET_ENCLOSURE,
    FBE_CLASS_ID_SAS_VIPER_ENCLOSURE,
    FBE_CLASS_ID_SAS_MAGNUM_ENCLOSURE,
    FBE_CLASS_ID_SAS_CITADEL_ENCLOSURE,
    FBE_CLASS_ID_SAS_BUNKER_ENCLOSURE,
    FBE_CLASS_ID_SAS_DERRINGER_ENCLOSURE,
    FBE_CLASS_ID_SAS_VOYAGER_ICM_ENCLOSURE,
    FBE_CLASS_ID_SAS_FALLBACK_ENCLOSURE,
    FBE_CLASS_ID_SAS_BOXWOOD_ENCLOSURE,
    FBE_CLASS_ID_SAS_KNOT_ENCLOSURE,
    FBE_CLASS_ID_SAS_PINECONE_ENCLOSURE,
    FBE_CLASS_ID_SAS_STEELJAW_ENCLOSURE,
    FBE_CLASS_ID_SAS_RAMHORN_ENCLOSURE,
    FBE_CLASS_ID_SAS_ANCHO_ENCLOSURE,
    FBE_CLASS_ID_SAS_VIKING_IOSXP_ENCLOSURE,
    FBE_CLASS_ID_SAS_CAYENNE_IOSXP_ENCLOSURE,
    FBE_CLASS_ID_SAS_NAGA_IOSXP_ENCLOSURE,
    FBE_CLASS_ID_SAS_CALYPSO_ENCLOSURE,
    FBE_CLASS_ID_SAS_RHEA_ENCLOSURE,
    FBE_CLASS_ID_SAS_MIRANDA_ENCLOSURE,
    FBE_CLASS_ID_SAS_TABASCO_ENCLOSURE,
    /* Add all other SAS Enclosures here */
    FBE_CLASS_ID_SAS_ENCLOSURE_LAST,

    FBE_CLASS_ID_ENCLOSURE_LAST,
 
    FBE_CLASS_ID_BASE_CONFIG,

	FBE_CLASS_ID_RAID_FIRST,
	FBE_CLASS_ID_RAID_GROUP,
    FBE_CLASS_ID_MIRROR,
    FBE_CLASS_ID_STRIPER,
    FBE_CLASS_ID_PARITY,
	/*add any new RAID classes here*/
	FBE_CLASS_ID_RAID_LAST,

    FBE_CLASS_ID_VIRTUAL_DRIVE,
	FBE_CLASS_ID_PROVISION_DRIVE,
    FBE_CLASS_ID_LUN,
    FBE_CLASS_ID_BVD_INTERFACE,

    FBE_CLASS_ID_EXTENT_POOL,
    FBE_CLASS_ID_EXTENT_POOL_LUN,
    FBE_CLASS_ID_EXTENT_POOL_METADATA_LUN,

    FBE_CLASS_ID_ENVIRONMENT_MGMT_FIRST,
    FBE_CLASS_ID_BASE_ENVIRONMENT,
    FBE_CLASS_ID_ENCL_MGMT,
    FBE_CLASS_ID_SPS_MGMT,
    FBE_CLASS_ID_DRIVE_MGMT,
    FBE_CLASS_ID_MODULE_MGMT,
    FBE_CLASS_ID_PS_MGMT,
    FBE_CLASS_ID_BOARD_MGMT,
    FBE_CLASS_ID_COOLING_MGMT,
    FBE_CLASS_ID_ENVIRONMENT_MGMT_LAST,

    FBE_CLASS_ID_LAST
} fbe_class_id_t;

typedef const struct fbe_const_class_info {
    const char * class_name;
    fbe_class_id_t class_id;
} fbe_const_class_info_t;

fbe_status_t fbe_get_class_by_id(fbe_class_id_t class_id, fbe_const_class_info_t ** pp_class_info);
fbe_status_t fbe_get_class_by_name(const char * class_name, fbe_const_class_info_t ** pp_class_info);

#ifdef __cplusplus
};
#endif

#endif /* FBE_CLASS_H */
