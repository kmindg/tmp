// DO NOT EDIT THIS FILE!
// Instead, edit the Perl module ICA::FrontEnd::Structures

// Generated by: mferson 
// Generated at: Thu Sep 20 15:01:44 2007
// Generated on: ESD-FERSON

#ifndef	ICA_FRONTEND_STRUCTURES_H
#define	ICA_FRONTEND_STRUCTURES_H

// Automatically generated #defines,
// based on exported subroutine names

#define	IMAGE_HEADER_VERSION	0x1
#define	IMAGE_HEADER_IDENT	"$ICA_FEI_IMAGE_HEADER_MDIDDY_FLAG_NAME_W$"
#define	META_HEADER_VERSION	0x1
#define	META_HEADER_IDENT	"$EMC_ICA_META_HEADER_IDENTIFIER$"
#define	MULTISEGMENT_IMAGE_MANIFEST_VERSION	0x1
#define	MULTISEGMENT_IMAGE_MANIFEST_IDENT	"$EMC_ICA_MULTISEGMENT_IMAGE_MANIFEST_IDENTIFIER$"
#define	IMAGE_SEGMENT_HEADER_VERSION	0x1
#define	IMAGE_SEGMENT_HEADER_IDENT	"$EMC_ICA_IMAGE_SEGMENT_HEADER_IDENTIFIER$"
#define	MIRROR_VERSION_VERSION	0x1
#define	MIRROR_VERSION_IDENT	"$EMC_MIRROR_VERSION_HEADER$"
#define	IMAGING_MECHANISM_ICA_CLI	0x1
#define	IMAGING_MECHANISM_UTILITY_PARTITION	0x2
#define	IMAGING_MECHANISM_NDU_NTMIRROR	0x3
#define	IMAGING_MECHANISM_NDU_ASIDC	0x4

// pack these structures on 1-byte boundaries,
// which is standard for wire protocols

#pragma pack(1)

// DISK_ID
typedef struct
{
	UINT_16E	Disk;
	UINT_16E	Bus;
} DISK_ID;


// DISK_LOCATION
typedef struct
{
	UINT_16E	Disk;
	UINT_16E	Bus;
	UINT_64E	Offset;
} DISK_LOCATION;


// IMAGE_HEADER
typedef struct
{
	UINT_32E	HeaderRevision;
	UINT_32E	DataDirRevision;
	CHAR_8E	Checksum[128];
	BOOL_8E	Compressed;
	CHAR_8E	ProductName[128];
	CHAR_8E	PlatformName[32];
	CHAR_8E	BasePlatform[32];
	CHAR_8E	PersonalityType[32];
	CHAR_8E	PlatformReserved[32];
	CHAR_8E	ProductRevision[32];
	CHAR_8E	ComponentRevisions[96];
	CHAR_8E	Creator[128];
	CHAR_8E	Copyright[128];
	CHAR_8E	ReleaseLevel[128];
	UINT_32E	CreateTime;
	CHAR_8E	DestType[16];
	UINT_64E	DestSize;
	CHAR_8E	DestName[128];
	UINT_64E	DestOffset;
	UINT_32E	NumDisks;
	DISK_LOCATION	Disks[16];
} IMAGE_HEADER;


// IMAGE_HEADER_ID
typedef struct
{
	CHAR_8E	identifier[128];
} IMAGE_HEADER_ID;


// IMAGE_SEGMENT_HEADER
typedef struct
{
	UINT_32E	HeaderRevision;
	CHAR_8E	ProductName[128];
	CHAR_8E	PlatformName[32];
	CHAR_8E	Checksum[128];
	CHAR_8E	MultiSegmentImageUID[128];
	UINT_32E	SegmentNumber;
	BOOL_8E	Compressed;
	CHAR_8E	DestType[16];
	UINT_64E	DestSize;
	CHAR_8E	DestName[128];
	UINT_64E	DestOffset;
	UINT_32E	NumDisks;
	DISK_LOCATION	Disks[16];
} IMAGE_SEGMENT_HEADER;


// LENGTH
typedef struct
{
	UINT_32E	length;
} LENGTH;


// MIRROR_VERSION_HEADER
typedef struct
{
	CHAR_8E	identifier[32];
	UINT_32E	HeaderRevision;
	CHAR_8E	RuntimeOS[8];
	CHAR_8E	RuntimeType[16];
	CHAR_8E	RuntimePlatform[16];
	CHAR_8E	RuntimeRevision[16];
	UINT_32E	ImagingMechanism;
	CHAR_8E	ImagingToolRevision[16];
	UINT_32E	ImagingStarted;
	UINT_32E	ImagingCompleted;
	UINT_32E	ImagingRandom;
	BYTE_8E	padding[388];
} MIRROR_VERSION_HEADER;


// MULTISEGMENT_IMAGE_MANIFEST
typedef struct
{
	UINT_32E	HeaderRevision;
	CHAR_8E	ProductName[128];
	CHAR_8E	PlatformName[32];
	CHAR_8E	BasePlatform[32];
	CHAR_8E	PersonalityType[32];
	CHAR_8E	PlatformReserved[32];
	CHAR_8E	ProductRevision[32];
	CHAR_8E	Creator[128];
	CHAR_8E	Copyright[128];
	CHAR_8E	ReleaseLevel[128];
	UINT_32E	CreateTime;
	CHAR_8E	MultiSegmentImageUID[128];
	UINT_32E	LastSegmentNumber;
	UINT_32E	NumDisks;
	DISK_ID	Disks[16];
} MULTISEGMENT_IMAGE_MANIFEST;


// SUB_IMAGE
typedef struct
{
	UINT_64E	Offset;
	UINT_64E	Size;
} SUB_IMAGE;


// META_HEADER
typedef struct
{
	UINT_32E	HeaderRevision;
	CHAR_8E	ProductName[64];
	CHAR_8E	ProductRevision[64];
	CHAR_8E	ProductPurpose[32];
	CHAR_8E	PlatformName[32];
	UINT_32E	SubImageCount;
	SUB_IMAGE	SubImages[8];
} META_HEADER;



// Return to default packing behavior
#pragma pack()

#endif // ICA_FRONTEND_STRUCTURES_H
