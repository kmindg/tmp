// DO NOT EDIT THIS FILE!
// Instead, edit the Perl module FBE::Imaging::Structures

// Generated by: shephm1
// Generated at: Mon May 14 10:37:26 2012
// Generated on: ESD-XSHEPHERD

#ifndef FBE_IMAGING_STRUCTURES_H
#define FBE_IMAGING_STRUCTURES_H

// Automatically generated #defines,
// based on exported subroutine names

#define FBE_IMAGING_FLAGS_VERSION   0x1
#define FBE_IMAGING_FLAGS_MAGIC_STRING  "$FBE_IMAGING_ON_DISK_FLAG_STRUCTURE$"
#define FBE_IMAGING_FLAGS_MAGIC_STRING_LENGTH   0x24
#define FBE_IMAGING_FLAGS_TRUE  0xFBE123
#define FBE_IMAGING_FLAGS_FALSE 0x0
#define FBE_IMAGING_MECHANISM_INVALID   0x0
#define FBE_IMAGING_MECHANISM_MANUAL_EDIT   0x1
#define FBE_IMAGING_MECHANISM_ICA_CLI   0x2
#define FBE_IMAGING_MECHANISM_UTILITY_PARTITION 0x3
#define FBE_IMAGING_MECHANISM_MAX   0x4
#define FBE_IMAGING_IMAGE_TYPE_INVALID  0x0
#define FBE_IMAGING_IMAGE_TYPE_PRIMARY_PARTITION_SPA    0x1
#define FBE_IMAGING_IMAGE_TYPE_PRIMARY_PARTITION_SPB    0x2
#define FBE_IMAGING_IMAGE_TYPE_UTILITY_PARTITION_SPA    0x3
#define FBE_IMAGING_IMAGE_TYPE_UTILITY_PARTITION_SPB    0x4
#define FBE_IMAGING_IMAGE_TYPE_DDBS 0x5
#define FBE_IMAGING_IMAGE_TYPE_BIOS 0x6
#define FBE_IMAGING_IMAGE_TYPE_POST 0x7
#define FBE_IMAGING_IMAGE_TYPE_GPS  0x8
#define FBE_IMAGING_IMAGE_TYPE_JETFIRE_BIOS 0x9
#define FBE_IMAGING_IMAGE_TYPE_JETFIRE_POST 0xA
#define FBE_IMAGING_IMAGE_TYPE_JETFIRE_GPS  0xB
#define FBE_IMAGING_IMAGE_TYPE_JETFIRE_BMC  0xC
#define FBE_IMAGING_IMAGE_TYPE_MEGATRON_BIOS    0xD
#define FBE_IMAGING_IMAGE_TYPE_MEGATRON_POST    0xE
#define FBE_IMAGING_IMAGE_TYPE_MEGATRON_GPS 0xF
#define FBE_IMAGING_IMAGE_TYPE_MEGATRON_BMC 0x10
#define FBE_IMAGING_IMAGE_TYPE_FUTURES_BIOS 0x11
#define FBE_IMAGING_IMAGE_TYPE_FUTURES_POST 0x12
#define FBE_IMAGING_IMAGE_TYPE_FUTURES_GPS  0x13
#define FBE_IMAGING_IMAGE_TYPE_FUTURES_BMC  0x14
#define FBE_IMAGING_IMAGE_TYPE_MAX  0x15

// pack these structures on 1-byte boundaries,
// which is standard for wire protocols

#pragma pack(1)

// fbe_imaging_flags_t
typedef struct
{
    fbe_char_t  magic_string[37];
    fbe_u32_t   structure_version;
    fbe_u32_t   imaging_stamp;
    fbe_u32_t   imaging_started;
    fbe_u32_t   imaging_completed;
    fbe_u32_t   imaging_mechanism;
    fbe_char_t  mechanism_revision[16];
    fbe_u32_t   invalidate_configuration;
    fbe_u32_t   images_installed[FBE_IMAGING_IMAGE_TYPE_MAX];
} fbe_imaging_flags_t;



// Return to default packing behavior
#pragma pack()

#endif // FBE_IMAGING_STRUCTURES_H
